# See dunst(5) for all configuration options

[global]
  ### Display ###

  # Display notification on focused monitor.  Possible modes are:
  #   mouse: follow mouse pointer
  #   keyboard: follow window with keyboard focus
  #   none: don't follow anything
  #
  # "keyboard" needs a window manager that exports the
  # _NET_ACTIVE_WINDOW property.
  # This should be the case for almost all modern window managers.
  #
  # If this option is set to mouse or keyboard, the monitor option
  # will be ignored.
  follow = mouse

  ### Geometry ###

  width = (250, 400)
  height = (0, 300)
  origin = bottom-right
  offset = 8x8

  notification_limit = 4

  ### Progress bar ###

  # Turn on the progess bar. It appears when a progress hint is passed with
  # for example dunstify -h int:value:12
  progress_bar = true

  # Show how many messages are currently hidden (because of
  # notification_limit).
  indicate_hidden = yes

  # Draw a line of "separator_height" pixel height between two
  # notifications.
  # Set to 0 to disable.
  separator_height = 2

  # Padding between text and separator.
  padding = 8

  # Horizontal padding.
  horizontal_padding = 8

  # Padding between text and icon.
  text_icon_padding = 0

  # Defines width in pixels of frame around the notification window.
  # Set to 0 to disable.
  frame_width = 2

  # Defines color of the frame around the notification window.
  background =  "#16161e"
  frame_color = "#16161e"

  # Define a color for the separator.
  separator_color = frame

  # Sort messages by urgency.
  sort = yes

  # Don't remove messages, if the user is idle (no mouse or keyboard input)
  # for longer than idle_threshold seconds.
  # Set to 0 to disable.
  # A client can set the 'transient' hint to bypass this. See the rules
  # section for how to disable this if necessary
  idle_threshold = 90

  ### Text ###

  # font = JetBrainsMono Nerd Font 12
  font = JetBrainsMono Medium Nerd Font Complete Mono 12

  # The spacing between lines.  If the height is smaller than the
  # font height, it will get raised to the font height.
  line_height = 0

  # Possible values are:
  # full: Allow a small subset of html markup in notifications:
  #        <b>bold</b>
  #        <i>italic</i>
  #        <s>strikethrough</s>
  #        <u>underline</u>
  #
  #        For a complete reference see
  #        <https://docs.gtk.org/Pango/pango_markup.html>.
  #
  # strip: This setting is provided for compatibility with some broken
  #        clients that send markup even though it's not enabled on the
  #        server. Dunst will try to strip the markup but the parsing is
  #        simplistic so using this option outside of matching rules for
  #        specific applications *IS GREATLY DISCOURAGED*.
  #
  # no:    Disable markup parsing, incoming notifications will be treated as
  #        plain text. Dunst will not advertise that it has the body-markup
  #        capability if this is set as a global setting.
  #
  # It's important to note that markup inside the format option will be parsed
  # regardless of what this is set to.
  markup = full

  # The format of the message.  Possible variables are:
  #   %a  appname
  #   %s  summary
  #   %b  body
  #   %i  iconname (including its path)
  #   %I  iconname (without its path)
  #   %p  progress value if set ([  0%] to [100%]) or nothing
  #   %n  progress value if set without any extra characters
  #   %%  Literal %
  # Markup is allowed
  format = "<b>%s</b>\n%b"

  # Alignment of message text.
  # Possible values are "left", "center" and "right".
  alignment = left

  # Vertical alignment of message text and icon.
  # Possible values are "top", "center" and "bottom".
  vertical_alignment = center

  # Show age of message if message is older than show_age_threshold
  # seconds.
  # Set to -1 to disable.
  show_age_threshold = 60

  # Specify where to make an ellipsis in long lines.
  # Possible values are "start", "middle" and "end".
  ellipsize = middle

  # Ignore newlines '\n' in notifications.
  ignore_newline = no

  # Stack together notifications with the same content
  stack_duplicates = true

  # Hide the count of stacked notifications with the same content
  hide_duplicate_count = false

  # Display indicators for URLs (U) and actions (A).
  show_indicators = yes

  ### Icons ###

  # Align icons left/right/off
  icon_position = left

  # Scale small icons up to this size, set to 0 to disable. Helpful
  # for e.g. small files or high-dpi screens. In case of conflict,
  # max_icon_size takes precedence over this.
  min_icon_size = 0

  # Scale larger icons down to this size, set to 0 to disable
  max_icon_size = 64

  # Paths to default icons.
  icon_path = /usr/share/icons/Papirus/16x16/status/:/usr/share/icons/Papirus/16x16/devices/

  ### Misc/Advanced ###

  # Browser for opening urls in context menu.
  browser = /usr/bin/xdg-open

  # Always run rule-defined scripts, even if the notification is suppressed
  always_run_script = true

  # Define the {title, class} of the windows spawned by dunst
  title = Dunst
  class = Dunst

  ### mouse

  # Defines list of actions for each mouse event
  # Possible values are:
  # * none: Don't do anything.
  # * do_action: Invoke the action determined by the action_name rule. If there is no
  #              such action, open the context menu.
  # * open_url: If the notification has exactly one url, open it. If there are multiple
  #             ones, open the context menu.
  # * close_current: Close current notification.
  # * close_all: Close all notifications.
  # * context: Open context menu for the notification.
  # * context_all: Open context menu for all notifications.
  # These values can be strung together for each mouse event, and
  # will be executed in sequence.
  mouse_left_click = close_current
  mouse_right_click = do_action, close_current
  mouse_middle_click = close_all

[urgency_low]
    foreground = "#c8ccd4"
    timeout = 7

[urgency_normal]
    foreground = "#c8ccd4"
    timeout = 10

[urgency_critical]
    foreground  = "#c8ccd4"
    frame_color = "#e06c75"
    timeout = 0

# vim: ft=cfg
