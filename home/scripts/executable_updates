#!/usr/bin/env bash

source colors.conf


_pacman=$(pacman -Qu --color always)
_pacman_number=$(sed "/^$/d" <<< "$_pacman" | wc -l)

_aur=$(paru -Qua --color always)
_aur_number=$(sed "/^$/d" <<< "$_aur" | wc -l)

_flatpak=$(flatpak remote-ls --updates --columns=name,branch)
_flatpak_number=$(sed "/^$/d" <<< "$_flatpak" | wc -l)

_total=$(( $_pacman_number + $_aur_number + $_flatpak_number ))
max_packages=100
cache_file="$XDG_CACHE_HOME/scripts/updates_available"


get() {
  if [[ $_total -ne 0 ]]; then
    if [[ $verbose -ne 1 ]]; then
      echo $_total
    else
      if [[ $_pacman_number -ne 0 ]]; then
        echo -e "  ${bold_yellow}[󰮯 ]${bold_gray} Pacman packages ${bold_yellow}($_pacman_number)${end}"
        awk '{ print "    " $0 }' <<< "$_pacman"
      fi
      if [[ $_aur_number -ne 0 ]]; then
        echo -e "\n  ${bold_green}[󰣇 ]${bold_gray} AUR packages ${bold_green}($_aur_number)${end}"
        awk '{ print "    " $0 }' <<< "$_aur"
      fi
      if [[ $_flatpak_number -ne 0 ]]; then
        echo -e "\n  ${bold_blue}[󰏗 ]${bold_gray} Flatpak packages ${bold_blue}($_flatpak_number)${end}"
        awk '{ print "    " $0 }' <<< "$_flatpak"
      fi
      echo -e "\n${bold_red}[󱇬 ]${bold_gray} Total packages ${bold_red}($_total)${end}"
    fi
  else
    echo 0
  fi
}

write() {
  cat << EOF > $cache_file
total:   ${_total}
pacman:  ${_pacman_number}
aur:     ${_aur_number}
flatpak: ${_flatpak_number}
EOF
}


install() {
  verbose=1
  get
  option="y"
  printf "\n${bold_magenta}[ ? ]${bold_gray} " && read -p "Update all ? " input
  [[ -n "$input" ]] && option="$input"
  for w in "$option"; do
    case "$w" in
      [yY]|[yY][eE][sS])
        if [[ $_pacman_number -ne 0 ]]; then
          echo -e "${bold_yellow}[󰮯 ]${bold_gray} Updating pacman packages${end}"
          sudo pacman -Syyu --noconfirm
        fi

        if [[ $_aur_number -ne 0 ]]; then
          echo -e "\n${bold_green}[󰣇 ]${bold_gray} Updating AUR packages${end}"
          paru -Syua --noconfirm
        fi
        
        if [[ $_flatpak_number -ne 0 ]]; then
          echo -e "\n${bold_blue}[󰏗 ]${bold_gray} Updating flatpak packages${end}"
          flatpak -y update
        fi

        break
        ;;
      pacman)
        echo -e "${bold_yellow}[󰮯 ]${bold_gray} Updating pacman packages${end}"
        sudo pacman -Syyu --noconfirm
        ;;
      aur|AUR)
        echo -e "\n${bold_green}[󰣇 ]${bold_gray} Updating AUR packages${end}"
        paru -Syua --noconfirm
        ;;
      flatpak)
        echo -e "\n${bold_blue}[󰏗 ]${bold_gray} Updating flatpak packages${end}"
        flatpak -y update
        ;;
      *)
        ;;
    esac
  done
  echo -e "\n${bold_green}[󰸞 ]${bold_gray} Done - Press enter to exit${end}" && read
}

_shutdown() {
  if [[ $(awk '/_total/ { print $2 }' $cache_file) -gt $max_packages ]]; then
    if [[ "$(nmcli networking connectivity)" != "none" ]]; then
      kitty sh -c "$HOME/scripts/updates update" &&
      sh -c "$HOME/scripts/updates write"
      [[ $(awk '/_total/ { print $2 }' $cache_file) -eq 0 ]] && shutdown now
    fi
  else
    shutdown now
  fi
}


while [[ "$1" ]]; do
  case "$1" in
    -v|--verbose)
      verbose=1
      ;;
    get)
      get       ; exit
      ;;
    write)
      write     ; exit
      ;;
    install)
      install    ; exit
      ;;
    shutdown)
      _shutdown ; exit
 esac
 shift 
done
